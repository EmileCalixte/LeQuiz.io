version: "3.8"

services:
  backend:
    image: node:14
    container_name: lequiz.io-backend
    working_dir: /home/node/app
    restart: always
    environment:
      - NODE_ENV=development
    volumes:
      - ./backend:/home/node/app
    depends_on:
      - database
    ports:
      - 3000:3000
    command: sh -c "./scripts/wait-database.sh database:5432 && ./scripts/start.sh"

  database:
    image: postgres:13
    container_name: lequiz.io-database
    restart: always
    volumes:
      - ./sql/import.sql:/docker-entrypoint-initdb.d/import.sql
    environment:
      POSTGRES_DB: lequiz-io
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin

  frontend:
    image: node:14
    container_name: lequiz.io-frontend
    working_dir: /home/node/app
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/home/node/app
    #depends_on:
    ports:
      - 80:3000
    command: sh -c "./scripts/start.sh"
    stdin_open: true

  back-office:
    build: ./back-office/Dockerfile
    image: lequiz-io:back-office
    container_name: lequiz.io-back-office
    restart: always
    ports:
    - 8000:80
    volumes:
    - ./back-office:/app
    environment:
      WEB_DOCUMENT_ROOT: /app/public

  back-office-dependencies:
    build: ./back-office/Dockerfile
    container_name: lequiz.io-back-office-dependencies
    restart: always
    volumes:
      - ./back-office:/app
    command: sh -c "composer install && npm install --verbose && npm run watch"

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025

  adminer:
    image: adminer:standalone
    container_name: lequiz.io-adminer
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: database
    depends_on:
      - database
    ports:
      - 8080:8080

  fileserver:
    image: halverneus/static-file-server:dev
    container_name: lequiz.io-fileserver
    restart: always
    environment:
      CORS: 'false'
      URL_PREFIX: /resources
    volumes:
      - ./fileserver:/web
    ports:
      - 8081:8080
